openapi: 3.0.0
info:
  title: Authentication API
  description: API for user authentication and account management
  version: 1.0.0
servers:
  - url: http://localhost:3000/api

paths:
  /authenticate:
    post:
      summary: Authenticate user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  token:
                    type: string
        '401':
          description: Unauthorized
  
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                password:
                  type: string
                confirmPassword:
                  type: string
                acceptTerms:
                  type: boolean
      responses:
        '200':
          description: Registration successful
        '400':
          description: Bad request
  
  /forgot-password:
    post:
      summary: Request password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Email sent for password reset
  
  /reset-password:
    post:
      summary: Reset password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                password:
                  type: string
                confirmPassword:
                  type: string
      responses:
        '200':
          description: Password reset successful

  /users:
    get:
      summary: Get all users (Admin only)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
        '403':
          description: Forbidden

  /users/{id}:
    get:
      summary: Get user by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User data retrieved
        '403':
          description: Forbidden
    put:
      summary: Update user details
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: User updated
        '403':
          description: Forbidden
    delete:
      summary: Delete user (Admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User deleted
        '403':
          description: Forbidden

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
